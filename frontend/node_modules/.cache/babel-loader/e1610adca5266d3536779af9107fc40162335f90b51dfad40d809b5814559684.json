{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'../context/AuthContext';import'../styles/Auth.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Profile=()=>{const{user,updateUser}=useAuth();const[formData,setFormData]=useState({username:'',email:'',password:'',confirmPassword:''});const[error,setError]=useState('');const[success,setSuccess]=useState('');const[loading,setLoading]=useState(false);// Populate form with user data when available\nuseEffect(()=>{if(user){setFormData({username:user.username||'',email:user.email||'',password:'',confirmPassword:''});}},[user]);const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});// Clear error/success messages on input change\nsetError('');setSuccess('');};const handleSubmit=async e=>{e.preventDefault();setLoading(true);// Form validation\nif(formData.password&&formData.password!==formData.confirmPassword){setError('Passwords do not match');setLoading(false);return;}try{// Prepare update data (only include fields that should be updated)\nconst updateData={};if(formData.username&&formData.username!==user.username){updateData.username=formData.username;}if(formData.email&&formData.email!==user.email){updateData.email=formData.email;}if(formData.password){updateData.password=formData.password;}// Only make API call if there are changes\nif(Object.keys(updateData).length>0){const token=localStorage.getItem('token');const response=await fetch('http://localhost:5000/api/profile',{method:'PUT',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify(updateData)});const data=await response.json();if(!response.ok){throw new Error(data.error||'Failed to update profile');}// Update user context\nupdateUser({...user,username:formData.username||user.username,email:formData.email||user.email});// Clear password fields\nsetFormData({...formData,password:'',confirmPassword:''});setSuccess('Profile updated successfully');}else{setSuccess('No changes to update');}}catch(error){setError(error.message);}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"profile-page\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"profile-title\",children:\"My Profile\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",role:\"alert\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success\",role:\"alert\",children:success}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"profile-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"username\",name:\"username\",value:formData.username,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,placeholder:\"Leave blank to keep current password\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-muted\",children:\"Password must be at least 8 characters long.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",id:\"confirmPassword\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange,placeholder:\"Leave blank to keep current password\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary btn-block\",disabled:loading,children:loading?'Updating...':'Update Profile'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Account Information\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Member Since:\"}),\" \",new Date(user===null||user===void 0?void 0:user.created_at).toLocaleDateString()]})]})]})})});};export default Profile;","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsx","_jsx","jsxs","_jsxs","Profile","user","updateUser","formData","setFormData","username","email","password","confirmPassword","error","setError","success","setSuccess","loading","setLoading","handleChange","e","name","value","target","handleSubmit","preventDefault","updateData","Object","keys","length","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","className","children","role","onSubmit","htmlFor","type","id","onChange","required","placeholder","disabled","Date","created_at","toLocaleDateString"],"sources":["/home/ieli15/Development/another_marketplace/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Auth.css';\n\nconst Profile = () => {\n  const { user, updateUser } = useAuth();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  // Populate form with user data when available\n  useEffect(() => {\n    if (user) {\n      setFormData({\n        username: user.username || '',\n        email: user.email || '',\n        password: '',\n        confirmPassword: ''\n      });\n    }\n  }, [user]);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    // Clear error/success messages on input change\n    setError('');\n    setSuccess('');\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    // Form validation\n    if (formData.password && formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n    \n    try {\n      // Prepare update data (only include fields that should be updated)\n      const updateData = {};\n      if (formData.username && formData.username !== user.username) {\n        updateData.username = formData.username;\n      }\n      if (formData.email && formData.email !== user.email) {\n        updateData.email = formData.email;\n      }\n      if (formData.password) {\n        updateData.password = formData.password;\n      }\n      \n      // Only make API call if there are changes\n      if (Object.keys(updateData).length > 0) {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:5000/api/profile', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify(updateData)\n        });\n        \n        const data = await response.json();\n        \n        if (!response.ok) {\n          throw new Error(data.error || 'Failed to update profile');\n        }\n        \n        // Update user context\n        updateUser({\n          ...user,\n          username: formData.username || user.username,\n          email: formData.email || user.email\n        });\n        \n        // Clear password fields\n        setFormData({\n          ...formData,\n          password: '',\n          confirmPassword: ''\n        });\n        \n        setSuccess('Profile updated successfully');\n      } else {\n        setSuccess('No changes to update');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"profile-page\">\n      <div className=\"container\">\n        <div className=\"auth-form-container\">\n          <h1 className=\"profile-title\">My Profile</h1>\n          \n          {error && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {error}\n            </div>\n          )}\n          \n          {success && (\n            <div className=\"alert alert-success\" role=\"alert\">\n              {success}\n            </div>\n          )}\n          \n          <form onSubmit={handleSubmit} className=\"profile-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"username\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"password\">New Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                placeholder=\"Leave blank to keep current password\"\n              />\n              <small className=\"form-text text-muted\">\n                Password must be at least 8 characters long.\n              </small>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\">Confirm New Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                placeholder=\"Leave blank to keep current password\"\n              />\n            </div>\n            \n            <button \n              type=\"submit\" \n              className=\"btn btn-primary btn-block\"\n              disabled={loading}\n            >\n              {loading ? 'Updating...' : 'Update Profile'}\n            </button>\n          </form>\n          \n          <div className=\"account-info\">\n            <h3>Account Information</h3>\n            <p><strong>Member Since:</strong> {new Date(user?.created_at).toLocaleDateString()}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}