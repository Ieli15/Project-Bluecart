{"ast":null,"code":"var _jsxFileName = \"/home/ieli15/Development/code/phase-5/Project-Bluecart/frontend/src/context/SearchContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContext = /*#__PURE__*/createContext();\n\n// Search provider component\nexport const SearchProvider = ({\n  children\n}) => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(() => {\n    return localStorage.getItem('searchQuery') || '';\n  });\n  const [searchResults, setSearchResults] = useState(() => {\n    const stored = localStorage.getItem('searchResults');\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [comparisonProducts, setComparisonProducts] = useState([]);\n\n  // Persist searchQuery and searchResults to localStorage\n  useEffect(() => {\n    localStorage.setItem('searchQuery', searchQuery);\n  }, [searchQuery]);\n  useEffect(() => {\n    localStorage.setItem('searchResults', JSON.stringify(searchResults));\n  }, [searchResults]);\n\n  // Add product to comparison\n  const addToComparison = product => {\n    // Check if product is already in comparison\n    if (comparisonProducts.some(p => p.title === product.title && p.store === product.store)) {\n      return;\n    }\n\n    // Add product to comparison (limit to 4 products)\n    if (comparisonProducts.length < 4) {\n      setComparisonProducts([...comparisonProducts, product]);\n    }\n  };\n\n  // Remove product from comparison\n  const removeFromComparison = product => {\n    setComparisonProducts(comparisonProducts.filter(p => !(p.title === product.title && p.store === product.store)));\n  };\n\n  // Clear comparison\n  const clearComparison = () => {\n    setComparisonProducts([]);\n  };\n\n  // Context value\n  const value = {\n    searchQuery,\n    setSearchQuery,\n    searchResults,\n    setSearchResults,\n    isLoading,\n    setIsLoading,\n    comparisonProducts,\n    addToComparison,\n    removeFromComparison,\n    clearComparison\n  };\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use search context\n_s(SearchProvider, \"HGs6diOFoTyh7xwbPGwIpVdSS84=\");\n_c = SearchProvider;\nexport const useSearch = () => {\n  _s2();\n  return useContext(SearchContext);\n};\n_s2(useSearch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","SearchContext","SearchProvider","children","_s","searchQuery","setSearchQuery","localStorage","getItem","searchResults","setSearchResults","stored","JSON","parse","isLoading","setIsLoading","comparisonProducts","setComparisonProducts","setItem","stringify","addToComparison","product","some","p","title","store","length","removeFromComparison","filter","clearComparison","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSearch","_s2","$RefreshReg$"],"sources":["/home/ieli15/Development/code/phase-5/Project-Bluecart/frontend/src/context/SearchContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context\nconst SearchContext = createContext();\n\n// Search provider component\nexport const SearchProvider = ({ children }) => {\n  const [searchQuery, setSearchQuery] = useState(() => {\n    return localStorage.getItem('searchQuery') || '';\n  });\n  const [searchResults, setSearchResults] = useState(() => {\n    const stored = localStorage.getItem('searchResults');\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [comparisonProducts, setComparisonProducts] = useState([]);\n\n  // Persist searchQuery and searchResults to localStorage\n  useEffect(() => {\n    localStorage.setItem('searchQuery', searchQuery);\n  }, [searchQuery]);\n\n  useEffect(() => {\n    localStorage.setItem('searchResults', JSON.stringify(searchResults));\n  }, [searchResults]);\n\n  // Add product to comparison\n  const addToComparison = (product) => {\n    // Check if product is already in comparison\n    if (comparisonProducts.some(p => p.title === product.title && p.store === product.store)) {\n      return;\n    }\n    \n    // Add product to comparison (limit to 4 products)\n    if (comparisonProducts.length < 4) {\n      setComparisonProducts([...comparisonProducts, product]);\n    }\n  };\n  \n  // Remove product from comparison\n  const removeFromComparison = (product) => {\n    setComparisonProducts(comparisonProducts.filter(\n      p => !(p.title === product.title && p.store === product.store)\n    ));\n  };\n  \n  // Clear comparison\n  const clearComparison = () => {\n    setComparisonProducts([]);\n  };\n  \n  // Context value\n  const value = {\n    searchQuery,\n    setSearchQuery,\n    searchResults,\n    setSearchResults,\n    isLoading,\n    setIsLoading,\n    comparisonProducts,\n    addToComparison,\n    removeFromComparison,\n    clearComparison\n  };\n  \n  return (\n    <SearchContext.Provider value={value}>\n      {children}\n    </SearchContext.Provider>\n  );\n};\n\n// Custom hook to use search context\nexport const useSearch = () => {\n  return useContext(SearchContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}