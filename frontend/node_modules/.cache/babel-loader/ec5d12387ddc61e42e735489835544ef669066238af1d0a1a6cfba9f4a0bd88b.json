{"ast":null,"code":"var _jsxFileName = \"/home/ieli15/Development/code/phase-5/Project-Bluecart/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    return localStorage.getItem('isAuthenticated') === 'true';\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Authentication failed');\n        }\n        const data = await response.json();\n        setUser(data.user);\n        setIsAuthenticated(true);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        localStorage.setItem('isAuthenticated', 'true');\n      } catch (error) {\n        console.error('Auth check error:', error);\n        // Clear invalid token\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('isAuthenticated');\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('isAuthenticated', 'true');\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAuthenticated');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user data\n  const updateUser = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // Context value\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"9B8UEku4eGWACPYy3ocSjk0J6kI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuth","token","response","fetch","headers","ok","Error","data","json","setItem","stringify","error","console","removeItem","login","userData","logout","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/ieli15/Development/code/phase-5/Project-Bluecart/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context\nconst AuthContext = createContext();\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    return localStorage.getItem('isAuthenticated') === 'true';\n  });\n  const [loading, setLoading] = useState(true);\n  \n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      \n      try {\n        const response = await fetch('http://localhost:5000/api/auth/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        if (!response.ok) {\n          throw new Error('Authentication failed');\n        }\n        \n        const data = await response.json();\n        setUser(data.user);\n        setIsAuthenticated(true);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        localStorage.setItem('isAuthenticated', 'true');\n      } catch (error) {\n        console.error('Auth check error:', error);\n        // Clear invalid token\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('isAuthenticated');\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    checkAuth();\n  }, []);\n  \n  // Login function\n  const login = (userData) => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('isAuthenticated', 'true');\n  };\n  \n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAuthenticated');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  \n  // Update user data\n  const updateUser = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  \n  // Context value\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    updateUser\n  };\n  \n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}