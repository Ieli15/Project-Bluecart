{"ast":null,"code":"// API service for making requests to the backend\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Get auth token from localStorage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Headers for authenticated requests\nconst authHeaders = () => {\n  const token = getToken();\n  return {\n    'Content-Type': 'application/json',\n    'Authorization': token ? `Bearer ${token}` : ''\n  };\n};\nconst API_BASE_URL = '/api';\nexport const searchProducts = async (query, sortBy = 'price') => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/search`, {\n      params: {\n        query,\n        sort_by: sortBy\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching products:', error);\n    throw error;\n  }\n};\n\n// Compare products\nexport const compareProducts = async products => {\n  try {\n    const response = await fetch(`${API_URL}/compare`, {\n      method: 'POST',\n      headers: authHeaders(),\n      body: JSON.stringify({\n        products\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Comparison failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API comparison error:', error);\n    throw error;\n  }\n};\n\n// Get user profile\nexport const getProfile = async () => {\n  try {\n    const response = await fetch(`${API_URL}/profile`, {\n      headers: authHeaders()\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch profile');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API profile error:', error);\n    throw error;\n  }\n};\n\n// Update user profile\nexport const updateProfile = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/profile`, {\n      method: 'PUT',\n      headers: authHeaders(),\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update profile');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API update profile error:', error);\n    throw error;\n  }\n};\n\n// Get search history\nexport const getSearchHistory = async (page = 1, perPage = 10) => {\n  try {\n    const response = await fetch(`${API_URL}/history?page=${page}&per_page=${perPage}`, {\n      headers: authHeaders()\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch search history');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API history error:', error);\n    throw error;\n  }\n};\n\n// Delete search history item\nexport const deleteSearchHistoryItem = async id => {\n  try {\n    const response = await fetch(`${API_URL}/history/${id}`, {\n      method: 'DELETE',\n      headers: authHeaders()\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete history item');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API delete history error:', error);\n    throw error;\n  }\n};\n\n// Authentication API calls\nexport const loginUser = async credentials => {\n  try {\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (!response.ok) {\n      const data = await response.json();\n      throw new Error(data.error || 'Login failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API login error:', error);\n    throw error;\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      const data = await response.json();\n      throw new Error(data.error || 'Registration failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API register error:', error);\n    throw error;\n  }\n};\nexport const refreshToken = async () => {\n  try {\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (!refreshToken) {\n      throw new Error('No refresh token available');\n    }\n    const response = await fetch(`${API_URL}/auth/refresh`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${refreshToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Token refresh failed');\n    }\n    const data = await response.json();\n    localStorage.setItem('token', data.access_token);\n    return data;\n  } catch (error) {\n    console.error('API token refresh error:', error);\n    // Clear tokens on refresh failure\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n    throw error;\n  }\n};\nexport const fetchProductOffers = async (asin, country = 'US', limit = 100, page = 1) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/product-offers`, {\n      params: {\n        asin,\n        country,\n        limit,\n        page\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product offers:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getToken","localStorage","getItem","authHeaders","token","API_BASE_URL","searchProducts","query","sortBy","response","get","params","sort_by","data","error","console","compareProducts","products","fetch","method","headers","body","JSON","stringify","ok","Error","json","getProfile","updateProfile","userData","getSearchHistory","page","perPage","deleteSearchHistoryItem","id","loginUser","credentials","registerUser","refreshToken","setItem","access_token","removeItem","fetchProductOffers","asin","country","limit"],"sources":["/home/ieli15/Development/code/phase-5/Project-Bluecart/frontend/src/services/api.js"],"sourcesContent":["// API service for making requests to the backend\n\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\n// Get auth token from localStorage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Headers for authenticated requests\nconst authHeaders = () => {\n  const token = getToken();\n  return {\n    'Content-Type': 'application/json',\n    'Authorization': token ? `Bearer ${token}` : ''\n  };\n};\n\nconst API_BASE_URL = '/api';\n\nexport const searchProducts = async (query, sortBy = 'price') => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/search`, {\n      params: { query, sort_by: sortBy },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching products:', error);\n    throw error;\n  }\n};\n\n// Compare products\nexport const compareProducts = async (products) => {\n  try {\n    const response = await fetch(`${API_URL}/compare`, {\n      method: 'POST',\n      headers: authHeaders(),\n      body: JSON.stringify({ products })\n    });\n    \n    if (!response.ok) {\n      throw new Error('Comparison failed');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API comparison error:', error);\n    throw error;\n  }\n};\n\n// Get user profile\nexport const getProfile = async () => {\n  try {\n    const response = await fetch(`${API_URL}/profile`, {\n      headers: authHeaders()\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch profile');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API profile error:', error);\n    throw error;\n  }\n};\n\n// Update user profile\nexport const updateProfile = async (userData) => {\n  try {\n    const response = await fetch(`${API_URL}/profile`, {\n      method: 'PUT',\n      headers: authHeaders(),\n      body: JSON.stringify(userData)\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to update profile');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API update profile error:', error);\n    throw error;\n  }\n};\n\n// Get search history\nexport const getSearchHistory = async (page = 1, perPage = 10) => {\n  try {\n    const response = await fetch(`${API_URL}/history?page=${page}&per_page=${perPage}`, {\n      headers: authHeaders()\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch search history');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API history error:', error);\n    throw error;\n  }\n};\n\n// Delete search history item\nexport const deleteSearchHistoryItem = async (id) => {\n  try {\n    const response = await fetch(`${API_URL}/history/${id}`, {\n      method: 'DELETE',\n      headers: authHeaders()\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to delete history item');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API delete history error:', error);\n    throw error;\n  }\n};\n\n// Authentication API calls\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    \n    if (!response.ok) {\n      const data = await response.json();\n      throw new Error(data.error || 'Login failed');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API login error:', error);\n    throw error;\n  }\n};\n\nexport const registerUser = async (userData) => {\n  try {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    \n    if (!response.ok) {\n      const data = await response.json();\n      throw new Error(data.error || 'Registration failed');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API register error:', error);\n    throw error;\n  }\n};\n\nexport const refreshToken = async () => {\n  try {\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (!refreshToken) {\n      throw new Error('No refresh token available');\n    }\n    \n    const response = await fetch(`${API_URL}/auth/refresh`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${refreshToken}`\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error('Token refresh failed');\n    }\n    \n    const data = await response.json();\n    localStorage.setItem('token', data.access_token);\n    \n    return data;\n  } catch (error) {\n    console.error('API token refresh error:', error);\n    // Clear tokens on refresh failure\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n    throw error;\n  }\n};\n\nexport const fetchProductOffers = async (asin, country = 'US', limit = 100, page = 1) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/product-offers`, {\n      params: { asin, country, limit, page },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product offers:', error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}